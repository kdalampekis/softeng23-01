for row_number, row in enumerate(reader, start=1):
                if ignore_first_line:
                    ignore_first_line = False
                    continue
                
                tconst, titleType, primaryTitle, originalTitle, isAdult, startYear, endYear, runtimeMinutes, genres, img_url_asset = row
                
                startYear = None if startYear == '\\N' else startYear
                endYear = None if endYear == '\\N' else endYear
                runtimeMinutes = None if runtimeMinutes == '\\N' else runtimeMinutes
                isAdult = None if isAdult == '\\N' else isAdult
                genres = None if genres == '\\N' else genres
                img_url_asset = None if img_url_asset == '\\N' else img_url_asset
                
                # Use get_or_create to insert a new element
                # into the table if not already existed
                TitleBasic.objects.get_or_create(
                    tconst=tconst,
                    defaults={
                        'titleType': titleType,
                        'primaryTitle': primaryTitle,
                        'originalTitle': originalTitle,
                        'isAdult': isAdult,
                        'startYear': startYear,
                        'endYear': endYear,
                        'runtimeMinutes': runtimeMinutes,
                        'genres': genres,
                        'img_url_asset': img_url_asset,
                    }
                )
                print(f"Processed row number: {row_number}")

if tconst exists already, pass
ChatGPT
It seems like you are reading data from a CSV file and trying to insert it into a Django model called TitleBasic. You want to use the get_or_create method to insert a new element if it doesn't exist already, and if it does exist, you want to skip it. Your current code should work, but you can make a slight adjustment to handle the case where tconst already exists:

python
Copy code
for row_number, row in enumerate(reader, start=1):
    if ignore_first_line:
        ignore_first_line = False
        continue

    tconst, titleType, primaryTitle, originalTitle, isAdult, startYear, endYear, runtimeMinutes, genres, img_url_asset = row

    startYear = None if startYear == '\\N' else startYear
    endYear = None if endYear == '\\N' else endYear
    runtimeMinutes = None if runtimeMinutes == '\\N' else runtimeMinutes
    isAdult = None if isAdult == '\\N' else isAdult
    genres = None if genres == '\\N' else genres
    img_url_asset = None if img_url_asset == '\\N' else img_url_asset

    # Use try-except to handle the case when tconst already exists
    try:
        title_obj, created = TitleBasic.objects.get_or_create(
            tconst=tconst,
            defaults={
                'titleType': titleType,
                'primaryTitle': primaryTitle,
                'originalTitle': originalTitle,
                'isAdult': isAdult,
                'startYear': startYear,
                'endYear': endYear,
                'runtimeMinutes': runtimeMinutes,
                'genres': genres,
                'img_url_asset': img_url_asset,
            }
        )

        if created:
            print(f"Created new record for tconst: {tconst}")
        else:
            print(f"Record for tconst {tconst} already exists, skipping.")

    except TitleBasic.MultipleObjectsReturned:
        print(f"Multiple records found for tconst: {tconst}, skipping.")

    print(f"Processed row number: {row_number}")
In this code:

We use a try-except block to handle the case where multiple records with the same tconst exist. If multiple records are found, it will skip the record.
We use the created variable to check if a new record was created or if the record already existed in the database. If created is True, it means a new record was created; otherwise, it already existed, and we print a message to indicate that it is being skipped.
This code should help you handle existing records appropriately while inserting new ones.



User
