:root {
    --gradient3: #A9A9A9;
    --gradient4: #00FF00;
    --gradient2: #BF40BF;
    --gradient1: #7F00FF;
    --button: #7F00FF;
    --functionality: #800080;
    --functionality1: #9F2B68;
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
html {
    font-family: "Montserrat", sans-serif;
}

body {
    background: black;
    padding: 0 16px;
    /*min-height: 100vh; !* 100% of the viewport height *!*/
    overflow-x: hidden;
}

html, body {
    height: 100%;
    margin: 0;
    padding: 0;
}

header {
    background: linear-gradient(to right, var(--gradient1), var(--gradient2));
    margin: auto -16px;
    padding: 16px 32px;
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.3);
}

header h1 {
    color: white;
    font-family: "McLaren", cursive;
    font-weight: 200;
}

.message {
    color: white;
    text-align: center;
    margin-top: 10rem;
    font-size: 2.7rem;
}

h2 {
    text-align: center;
    margin-top: 2rem;
    color: white;
}

button {
    padding: 10px 20px;
    width: 140px;
    color: white;
    border-radius: 10px;
    font-size: 16px;
    cursor: pointer;
    text-align: center;
    margin: 1rem;
    background: black;
    border: 2px solid var(--button);
}

button:hover {
    background: var(--button);
    color: white;
}

.body {
    padding-bottom: 6rem;
}

.buttonContainer {
    /*border: 2px solid white;*/
    margin-top: 2.5rem;
    text-align: center;
}

.inputContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;

    margin-top: 2rem;
}

.inputContainer Button {
    margin-top: 1rem;
}

input, .inputContainer .styled-select {
    width: 200px; /* Set a fixed width */
    padding: 10px;
    margin: 10px 0;
    border-radius: 5px;
    border: 1px solid #ddd;
    background-color: white;
    color: black;
    font-size: 16px;
    text-align: left;
}

.query input {
    width: 250px;
}


/* To style the dropdown arrow */
.styled-select::-ms-expand {
    display: none;
}

/* Styles for hover, focus, etc., can be added similarly to your buttons */
.styled-select:hover {
    background-color: #f5f5f5; /* Example hover color */
}

.home {
    margin-top: 5rem;
}

.functionality, .actor {
    border: 2px solid var(--button); /* Example border */
    padding: 10px;
    margin: 4px 0;
    border-radius: 10px;
    width: 10rem;
    height: 10rem;
    text-align: center;
    color: white;
    background: black;
}

.actor {
    /* Use flexbox for the layout */
    display: flex;
    flex-direction: row; /* Align children horizontally */
    align-items: center; /* Center children vertically */
    justify-content: start; /* Align children to the start of the container */
    border: 2px solid white;
    height: 12rem; /* Keep the height as specified */
    width: 20rem; /* Keep the width as specified */
    /*padding: 10px; !* Optional: Add padding for some space inside the container *!*/
}

.functionality:hover, .movie:hover, .actor:hover {
    background: linear-gradient(to right, var(--gradient1), var(--gradient2));
    border: 2px solid white;
}

.actor:hover .actor-image, .movie:hover .movie-image {
    border: 2px solid black;
    box-shadow: 0 2px 5px 5px black;
}

.functionalitiesContainer, .moviesContainer, .actorsContainer {
    margin: 3rem auto;
    width: 70%;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 20px;
    padding: 20px 10px;
    color: white;
}

.moviesContainer, .actorsContainer {
    width: 90%;
}

footer {
    background-color: black;
    text-align: center;
    width: 100%;
    height: 4rem;
    padding: 1rem;
    z-index: 2;
    position: fixed;
    bottom: 0;
}

footer p, .link {
    color: #ccc;
    text-decoration: none;
}

.link:hover {
    color: white;
}

.dynamic-content {
    background: linear-gradient(45deg, var(--gradient1), var(--gradient2));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    color: transparent;
}

.movie {
    height: 12rem;
    width: 20rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    border: 2px solid white;
}

.movie h3, p {
    padding: 5px;
}


/* ... (existing styles) */

.movie-analytics {
    border: 2px solid white;
    border-radius: 10px;
    background: black;
    color: white;
    padding: 20px;
}

.movie-analytics {
    margin: 4rem 4rem;
}

.movie-analytics h1 {
    /*text-align: center;*/
    margin: 1rem 0 2rem 0;
    font-size: 2.5rem;
}

.movie-details {
}

.movie-analytics h2 {
    text-align: left;
}

.movie-analytics p {
    letter-spacing: 1px;
    line-height: 25px;
}

.movie-info {

}


/* Additional styling as per your design preferences */

.addLikeButtons {
    text-align: left;
}

.addLikeButtons button {
    background-color: #353535;
    border-color: black;
}

.addLikeButtons button:hover {
    background-color: gray;
    color: black;
}

.movie-analytics {
    /*... existing styles ...*/
    overflow: hidden; /* This will hide any content that overflows the container's bounds */
}

.movie-analytics .movie-info span,
.movie-analytics .aka-titles li,
.movie-analytics .principal-crew li {
    /* Ensure that text does not break awkwardly */
    word-wrap: break-word; /* This allows long words to wrap and go to the next line */
    white-space: normal; /* This ensures that whitespace such as spaces and new lines are handled normally */
}

/* To make sure list items do not break out of their containers */
.aka-titles ul, .principal-crew ul {
    padding: 0; /* Remove padding to ensure list aligns with container edges */
    margin: 0; /* Remove margin to ensure list aligns with container edges */
}

.aka-titles li, .principal-crew li {
    /* Ensures list items break onto the next line within their container */
    display: inline; /* This makes the list items flow like inline text */
    margin-right: 5px; /* Adds a small margin to the right of each item for separation */
}

.movie-analytics strong {
    font-size: 1.25rem;
}


/* styles.css */



.actor-image {
    width: 33.33%; /* Image takes up 1/3 of the container */
    height: 100%; /* Image takes full height of the container */
    object-fit: cover; /* Cover the area without stretching the image */
    border-radius: 4px; /* Optional: if you want rounded corners */
}

.actor-details {
    display: flex;
    flex-direction: column; /* Stack name and profession vertically */
    align-items: center; /* Center the text horizontally */
    justify-content: center; /* Center the text vertically */
    width: 66.66%; /* Text takes up the remaining 2/3 of the container */
    height: 100%; /* Take full height of the container */
    padding-left: 10px; /* Add some space between the image and the text */
}

.actor-name, .actor-profession {
    text-align: center; /* Center the text */
}

/* When there is no image, the actor details should take up the whole width */
.actor-details.full-width {
    width: 100%; /* Text takes up full width when there's no image */
}

